{"version":3,"sources":["/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/$_lazy_route_resource lazy","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/app.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/app.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/app.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/app.module.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/app.routes.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/album/album.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/album/album.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/album/album.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/audio/preview/preview.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/audio/preview/preview.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/audio/preview/preview.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/auth.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/auth.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/auth.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/login/login.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/login/login.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/login/login.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/common/header/header.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/common/header/header.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/common/header/header.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/create/create.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/create/create.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/create/create.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/my-playlists/my-playlists.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/my-playlists/my-playlists.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/my-playlists/my-playlists.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-card/playlist-card.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-card/playlist-card.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-card/playlist-card.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-tracks-dialog/playlist-tracks-dialog.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-tracks-dialog/playlist-tracks-dialog.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-tracks-dialog/playlist-tracks-dialog.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/search/search.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/search/search.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/search/search.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/simple-song-card/simple-song-card.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/simple-song-card/simple-song-card.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/simple-song-card/simple-song-card.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/song-card/song-card.component.css","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/song-card/song-card.component.html","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/song-card/song-card.component.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/guards/isLogged.guard.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/interceptors/expired-token.interceptor.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/services/auth.service.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/services/playlist.service.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/environments/environment.ts","/Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { SearchComponent } from './components/search/search.component';\nimport { AppRoutingModule } from './app.routes';\nimport { SongCardComponent } from './components/song-card/song-card.component';\nimport { AlbumComponent } from './components/album/album.component';\nimport { AuthService } from './services/auth.service';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { CreateComponent } from './components/playlist/create/create.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http'\n\n\nimport { \n  MatChipsModule,\n  MatInputModule,\n  MatButtonModule,\n  MatFormFieldModule,\n  MatCardModule,\n  MatGridListModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatCheckboxModule,\n  MatSelectModule,\n  MatMenuModule,\n  MatDividerModule,\n  MatIconModule\n  } from '@angular/material'\n  import { MatDialogModule } from '@angular/material/dialog'\nimport { PlaylistService } from './services/playlist.service';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { IsLoggedGuard } from './guards/isLogged.guard';\nimport { HeaderComponent } from './components/common/header/header.component';\nimport { MyPlaylistsComponent } from './components/playlist/my-playlists/my-playlists.component';\nimport { PlaylistCardComponent } from './components/playlist/playlist-card/playlist-card.component';\nimport { PlaylistTracksDialogComponent } from './components/playlist/playlist-tracks-dialog/playlist-tracks-dialog.component';\nimport { ExpiredTokenInterceptor } from './interceptors/expired-token.interceptor';\nimport { PreviewComponent } from './components/audio/preview/preview.component';\nimport { SimpleSongCardComponent } from './components/simple-song-card/simple-song-card.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SearchComponent,\n    SongCardComponent,\n    AlbumComponent,\n    LoginComponent,\n    CreateComponent,\n    AuthComponent,\n    HeaderComponent,\n    MyPlaylistsComponent,\n    PlaylistCardComponent,\n    PlaylistTracksDialogComponent,\n    PreviewComponent,\n    SimpleSongCardComponent\n  ],\n  entryComponents: [\n    PlaylistTracksDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatButtonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatChipsModule,\n    MatCardModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatGridListModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatMenuModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatIconModule\n  ],\n  providers: [\n    AuthService,\n    PlaylistService,\n    IsLoggedGuard,\n     {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ExpiredTokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/app.module.ts","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { SearchComponent } from './components/search/search.component';\nimport { AlbumComponent } from './components/album/album.component';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { CreateComponent } from './components/playlist/create/create.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { IsLoggedGuard } from './guards/isLogged.guard';\nimport { MyPlaylistsComponent } from './components/playlist/my-playlists/my-playlists.component';\n\nconst routes: Routes = [\n    \n    { path: '', pathMatch: 'full', redirectTo: 'search'},\n    { path: 'login', component: LoginComponent},\n    { path: 'auth', component:  AuthComponent},\n    { path: 'search', component: SearchComponent, canActivate: [IsLoggedGuard] },\n    { path: 'albums/:id', component: AlbumComponent, canActivate: [IsLoggedGuard] },\n    { path: 'create/playlist', pathMatch: 'full', component: CreateComponent, canActivate: [IsLoggedGuard] },\n    { path: 'playlists/mine', pathMatch: 'full', component: MyPlaylistsComponent, canActivate: [IsLoggedGuard]}\n\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, {\n        useHash: true\n    })],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/app.routes.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".img {\\n    padding: 20px;\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1;\\n    \\n}\\n\\n.container {\\n    margin: 0 auto;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n}\\n\\n.songs {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1;\\n}\\n\\n.song-container {\\n    margin: 0 auto;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/album/album.component.css\n// module id = ../../../../../src/app/components/album/album.component.css\n// module chunks = main","module.exports = \"<app-header></app-header>\\n<div class=\\\"container\\\">\\n    <div class=\\\"img\\\">\\n        <img src=\\\"{{image?.url}}\\\" >\\n    </div>\\n    <div class=\\\"songs\\\">\\n        <h2>{{name}}</h2>\\n        <p>\\n            <label>{{label}}</label>\\n\\n        </p>\\n        <span>Release date: {{releaseDate}}</span>\\n        <div class=\\\"song-container\\\">\\n            <app-simple-song-card *ngFor=\\\"let song of songs\\\" [song]=\\\"song\\\" [playlists]=\\\"playlists\\\"></app-simple-song-card>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/album/album.component.html\n// module id = ../../../../../src/app/components/album/album.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../../services/auth.service';\nimport { PlaylistService } from '../../services/playlist.service';\n\n@Component({\n  selector: 'app-album',\n  templateUrl: './album.component.html',\n  styleUrls: ['./album.component.css']\n})\nexport class AlbumComponent implements OnInit {\n\n  private album;\n  public copyrights;\n  public songs;\n  public image;\n  public releaseDate;\n  public label;\n  public name;\n  \n  private access_token: string;\n\n  public playlists;\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private authService: AuthService,\n    private playlistService: PlaylistService\n  ) { \n    this.access_token = this.authService.getAccessToken();\n  }\n\n  ngOnInit() {\n    let id = this.route.snapshot.paramMap.get('id')\n    \n    this.http.get(`https://api.spotify.com/v1/albums/${id}`, {\n      headers: {\n        'Content-Type':  'application/json',\n        'Authorization': 'Bearer ' + this.access_token\n      }\n    }).subscribe(data => {\n      console.log(data)\n      this.album = data;\n      this.copyrights = this.album.copyrights;\n      this.songs = this.album.tracks.items;\n      this.image = this.album.images[0]\n      this.releaseDate = this.album.release_date;\n      this.label = this.album.label;\n      this.name = this.album.name\n      console.log(this.songs)\n    })\n\n    this.playlistService.getMyPlaylists().subscribe((data:any) => {\n      this.playlists = data.items;\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/album/album.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".audio {\\n    width: 100%\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/audio/preview/preview.component.css\n// module id = ../../../../../src/app/components/audio/preview/preview.component.css\n// module chunks = main","module.exports = \"<audio controls class=\\\"audio\\\">\\n  <source src=\\\"{{previewUrl}}\\\" type=\\\"audio/mp3\\\">\\n</audio>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/audio/preview/preview.component.html\n// module id = ../../../../../src/app/components/audio/preview/preview.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-preview',\n  templateUrl: './preview.component.html',\n  styleUrls: ['./preview.component.css']\n})\nexport class PreviewComponent implements OnInit {\n\n\n  @Input() previewUrl\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/audio/preview/preview.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/auth.component.css\n// module id = ../../../../../src/app/components/auth/auth.component.css\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/auth.component.html\n// module id = ../../../../../src/app/components/auth/auth.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor(\n    private route: ActivatedRoute,\n    private authService: AuthService,\n    private router: Router\n  ) { \n    // if (!sessionStorage.getItem('access_token') || sessionStorage.getItem('access_token') === 'null') {\n      this.route.queryParamMap.subscribe(params => {\n        let access_token = params.get('access_token');\n        let refresh_token = params.get('refresh_token');\n        sessionStorage.setItem('access_token', access_token);\n        sessionStorage.setItem('refresh_token', refresh_token);\n        this.authService.updateAuth({ access_token: access_token, refresh_token: refresh_token });\n        this.router.navigateByUrl('search')\n      })\n  //   }else {\n  //     this.router.navigateByUrl('search')\n  //   }\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/auth.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/login/login.component.css\n// module id = ../../../../../src/app/components/auth/login/login.component.css\n// module chunks = main","module.exports = \"<app-header></app-header>\\n<a href=\\\"/login\\\"> <button mat-raised-button color=\\\"primary\\\">Login</button></a>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/login/login.component.html\n// module id = ../../../../../src/app/components/auth/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/auth/login/login.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".header{\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center\\n}\\n\\n\\n.link {\\n    text-decoration: none;\\n    color: black;\\n    padding: 10px;\\n}\\n\\n\\n.btn {\\n    font-size: 20px\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/common/header/header.component.css\n// module id = ../../../../../src/app/components/common/header/header.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row class=\\\"header\\\">\\n    <a *ngIf=\\\"isLoggedIn\\\" routerLink=\\\"/search\\\" class=\\\"link\\\"><button mat-button class=\\\"btn\\\">Search</button></a>\\n    <a *ngIf=\\\"isLoggedIn\\\" class=\\\"link\\\" routerLink=\\\"/create/playlist\\\"><button mat-button class=\\\"btn\\\">Create playlist</button></a>   \\n    <a *ngIf=\\\"isLoggedIn\\\" class=\\\"link\\\" routerLink=\\\"/playlists/mine\\\"><button mat-button class=\\\"btn\\\">My playlists</button></a>      \\n    <a *ngIf=\\\"!isLoggedIn\\\" class=\\\"link\\\" routerLink=\\\"/login\\\"><button mat-button class=\\\"btn\\\">Login</button></a>   \\n  </mat-toolbar-row>\\n</mat-toolbar>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/common/header/header.component.html\n// module id = ../../../../../src/app/components/common/header/header.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  public isLoggedIn = sessionStorage.getItem('access_token') ? sessionStorage.getItem('access_token') !== 'null' ? true  : false : false\n\n  constructor() { \n    \n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/common/header/header.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n  }\\n  \\n  .container {\\n      display: -webkit-box;\\n      display: -ms-flexbox;\\n      display: flex;\\n      -webkit-box-pack: center;\\n          -ms-flex-pack: center;\\n              justify-content: center;\\n      margin: 20px;\\n  }\\n  \\n  .btn {\\n      -ms-flex-item-align: center;\\n          -ms-grid-row-align: center;\\n          align-self: center;\\n  }\\n  \\n  /* .example-container > * {\\n    width: 50%;\\n  } */\\n  \\n  .example-card {\\n    width: 50%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/create/create.component.css\n// module id = ../../../../../src/app/components/playlist/create/create.component.css\n// module chunks = main","module.exports = \"<!-- <div class=\\\"example-container\\\">\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Input\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <textarea matInput placeholder=\\\"Textarea\\\"></textarea>\\n  </mat-form-field>\\n</div> -->\\n<app-header></app-header>\\n<div class=\\\"container\\\">\\n<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Create playlist</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <div class=\\\"example-container\\\">\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Enter playlist title\\\" [formControl]=\\\"name\\\" required>\\n        <mat-error *ngIf=\\\"name.invalid\\\">{{getNameErrorMessage()}}</mat-error>\\n      </mat-form-field>\\n    \\n      <mat-form-field>\\n        <textarea matInput placeholder=\\\"Enter playlist description\\\" [formControl]=\\\"description\\\" required></textarea>\\n        <mat-error *ngIf=\\\"description.invalid\\\">{{getDescrErrorMessage()}}</mat-error>        \\n      </mat-form-field>\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"public\\\">Public</mat-checkbox>\\n    </div>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button (click)=\\\"createPlaylist()\\\" class=\\\"btn\\\" mat-button>Create</button>\\n  </mat-card-actions>\\n</mat-card>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/create/create.component.html\n// module id = ../../../../../src/app/components/playlist/create/create.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../../../services/auth.service';\nimport { PlaylistService } from '../../../services/playlist.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n\n  public name = new FormControl('', [Validators.required]);\n  public description = new FormControl('', [Validators.required]);\n  public public = false;\n  private user: User;\n  private access_token;\n  constructor(\n    private authService: AuthService,\n    private playlistService: PlaylistService,\n    private http: HttpClient,\n    private router: Router\n  ) {\n    this.access_token = this.authService.getAccessToken();\n    this.authService.user\n      .subscribe(user => {\n        this.user = user\n        console.log(this.user)\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  getNameErrorMessage() {\n    return this.name.hasError('required') ? 'You must enter a value' : '';\n  }\n\n  getDescrErrorMessage() {\n    return this.description.hasError('required') ? 'You must enter a value' : '';\n  }\n\n  createPlaylist() {\n    console.log(this.access_token)\n    this.http.post(`https://api.spotify.com/v1/users/${this.user.id}/playlists`,\n      {\n        \"description\": this.description.value,\n        \"public\": this.public,\n        \"name\": this.name.value\n      },\n      {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + this.access_token,\n        }\n      }).subscribe(data => {\n        console.log(data)\n        this.router.navigateByUrl('/playlists/mine')\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/create/create.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".playlists {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap;\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/my-playlists/my-playlists.component.css\n// module id = ../../../../../src/app/components/playlist/my-playlists/my-playlists.component.css\n// module chunks = main","module.exports = \"<app-header></app-header>\\n\\n<div class=\\\"playlists\\\">\\n  <app-playlist-card *ngFor=\\\"let playlist of playlists\\\" [playlist]=\\\"playlist\\\"></app-playlist-card>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/my-playlists/my-playlists.component.html\n// module id = ../../../../../src/app/components/playlist/my-playlists/my-playlists.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../../../services/auth.service';\nimport { PlaylistService } from '../../../services/playlist.service';\n\n@Component({\n  selector: 'app-my-playlists',\n  templateUrl: './my-playlists.component.html',\n  styleUrls: ['./my-playlists.component.css']\n})\nexport class MyPlaylistsComponent implements OnInit {\n\n  public playlists;\n  private playlistsObj;\n  private access_token;\n  constructor(\n    private http: HttpClient,\n    private authServece: AuthService,\n    private playlistService: PlaylistService\n  ) {\n      this.access_token = this.authServece.getAccessToken();\n   }\n\n  ngOnInit() {\n   this.playlistService.getMyPlaylists().subscribe(data => {\n      this.playlistsObj = data\n      this.playlists = this.playlistsObj.items;\n      console.log(this.playlists)\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/my-playlists/my-playlists.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-card {\\n    max-width: 200px;\\n    margin: 10px\\n  }\\n\\n  .btn {\\n      -ms-flex-item-align: center;\\n          -ms-grid-row-align: center;\\n          align-self: center\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-card/playlist-card.component.css\n// module id = ../../../../../src/app/components/playlist/playlist-card/playlist-card.component.css\n// module chunks = main","module.exports = \"<mat-card class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n    <mat-card-title>{{playlist.name}}</mat-card-title>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"../../assets/img/playlist.jpg\\\" alt=\\\"No image\\\">\\n  <mat-card-content>\\n    <h3>{{playlist.owner.display_name}}</h3>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button class=\\\"btn\\\" (click)=\\\"showTracks(playlist.id, playlist.name)\\\" mat-button>TRACKS</button>\\n  </mat-card-actions>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-card/playlist-card.component.html\n// module id = ../../../../../src/app/components/playlist/playlist-card/playlist-card.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { PlaylistTracksDialogComponent } from '../playlist-tracks-dialog/playlist-tracks-dialog.component';\nimport { PlaylistService } from '../../../services/playlist.service';\n\n@Component({\n  selector: 'app-playlist-card',\n  templateUrl: './playlist-card.component.html',\n  styleUrls: ['./playlist-card.component.css']\n})\nexport class PlaylistCardComponent implements OnInit {\n\n\n  @Input() playlist;\n\n  constructor(\n    public dialog: MatDialog,\n    private playlistService: PlaylistService\n  ) { }\n\n  showTracks(id, name): void {\n    this.playlistService.getTracks(id).subscribe(tracks => {\n      console.log(tracks)\n      console.log(id)\n      let dialogRef = this.dialog.open(PlaylistTracksDialogComponent, {\n        width: '400px',\n        data: {\n          tracks: tracks,\n          name: name,\n          playlistId: id\n        }\n      });\n  \n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed');\n      });\n    })\n   \n  }\n\n  ngOnInit() {\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-card/playlist-card.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".buttons {\\n  -ms-flex-item-align: center;\\n      -ms-grid-row-align: center;\\n      align-self: center\\n}\\n\\n.container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n}\\n\\n.name {\\n    -ms-flex-item-align: center;\\n        -ms-grid-row-align: center;\\n        align-self: center\\n}\\n\\ni:hover {\\n    cursor:pointer\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-tracks-dialog/playlist-tracks-dialog.component.css\n// module id = ../../../../../src/app/components/playlist/playlist-tracks-dialog/playlist-tracks-dialog.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <h1 class=\\\"name\\\" mat-dialog-title>{{name}}</h1>\\n  <mat-divider></mat-divider>\\n  <div mat-dialog-content>\\n    <ol>\\n      <li *ngFor=\\\"let song of songs; let i = index\\\">{{song.track.artists[0].name}} - {{song.track.name}}\\n          <i (click)=\\\"remove(song.track.uri, i)\\\" class=\\\"material-icons md-24\\\">delete</i>\\n     \\n    </ol>\\n  </div>\\n  <mat-divider></mat-divider>\\n  <div mat-dialog-actions class=\\\"buttons\\\">\\n    <button mat-button (click)=\\\"loadMore()\\\">LOAD MORE</button>\\n    <button mat-button (click)=\\\"close()\\\">Close</button>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-tracks-dialog/playlist-tracks-dialog.component.html\n// module id = ../../../../../src/app/components/playlist/playlist-tracks-dialog/playlist-tracks-dialog.component.html\n// module chunks = main","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { PlaylistService } from '../../../services/playlist.service';\n\n@Component({\n  selector: 'app-playlist-tracks-dialog',\n  templateUrl: './playlist-tracks-dialog.component.html',\n  styleUrls: ['./playlist-tracks-dialog.component.css']\n})\nexport class PlaylistTracksDialogComponent {\n  \n  public songs;\n  public name;\n  private playlistId;\n\n  constructor(\n    public dialogRef: MatDialogRef<PlaylistTracksDialogComponent>,\n    private playlistService: PlaylistService,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n        this.songs = data.tracks.items\n        this.name = data.name\n        this.playlistId = data.playlistId\n        console.log(this.songs)\n     }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n\n  remove(uri, index){\n    this.playlistService.removeTrack(this.playlistId, uri, index).subscribe(data => {\n      this.close();\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/playlist/playlist-tracks-dialog/playlist-tracks-dialog.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".songs {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -ms-flex-wrap: wrap;\\n        flex-wrap: wrap;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/search/search.component.css\n// module id = ../../../../../src/app/components/search/search.component.css\n// module chunks = main","module.exports = \"<app-header></app-header>\\n<div>\\n    <form (submit)=\\\"search()\\\" lass=\\\"example-form\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Search track\\\" [formControl]=\\\"songSearch\\\">\\n        </mat-form-field>\\n      <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">Search</button>        \\n      </form>\\n</div>\\n\\n\\n<div class=\\\"songs\\\">\\n  <app-song-card *ngFor=\\\"let song of songs\\\" [song]=\\\"song\\\" [playlists]=\\\"playlists\\\"></app-song-card>\\n</div>\\n<div *ngIf=\\\"songs\\\">\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"loadMore()\\\">Load more</button>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/search/search.component.html\n// module id = ../../../../../src/app/components/search/search.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from '../../services/auth.service';\nimport { FormControl } from '@angular/forms';\nimport { PlaylistService } from '../../services/playlist.service';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n\n  public songSearch = new FormControl('');\n\n  private access_token: string;\n  private tracks;\n  private playlistsObj;\n  public playlists;\n  public songs: Array<any>;\n  constructor(\n    private route: ActivatedRoute,\n    private http: HttpClient,\n    private authService: AuthService,\n    private playlistService: PlaylistService\n  ) {\n    this.access_token = this.authService.getAccessToken();\n   \n  }\n\n  ngOnInit() {\n    this.playlistService.getMyPlaylists().subscribe(data => {\n      this.playlistsObj = data\n      this.playlists = this.playlistsObj.items;\n    })\n  }\n\n\n  search() {\n    this.http.get(`https://api.spotify.com/v1/search?query=${this.songSearch.value}&type=track,artist`).subscribe(data => {\n      this.tracks = data['tracks'];\n      this.songs = this.tracks.items;\n      console.log(this.songs)\n    })\n  }\n\n  loadMore() {\n    this.http.get(this.tracks.next).subscribe(data => {\n      this.tracks = data['tracks'];\n      this.songs = this.songs.concat(this.tracks.items);\n    })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/search/search.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-card {\\n    max-width: 250px;\\n    margin: 10px\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/simple-song-card/simple-song-card.component.css\n// module id = ../../../../../src/app/components/simple-song-card/simple-song-card.component.css\n// module chunks = main","module.exports = \"<mat-card class=\\\"info\\\" class=\\\"example-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>{{song.name}}</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n      <p>Artists: <span *ngFor=\\\"let artist of song.artists\\\">{{artist.name}}, </span></p>\\n    <app-preview *ngIf=\\\"song.preview_url\\\" [previewUrl]=\\\"song.preview_url\\\"></app-preview>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\">ADD TO PLAYLIST</button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n      <button *ngFor=\\\"let playlist of playlists\\\" (click)=\\\"addToPlaylist(playlist.id, song.uri)\\\" mat-menu-item>{{playlist.name}}</button>\\n    </mat-menu>\\n  </mat-card-actions>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/simple-song-card/simple-song-card.component.html\n// module id = ../../../../../src/app/components/simple-song-card/simple-song-card.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\nimport { PlaylistService } from '../../services/playlist.service';\n\n@Component({\n  selector: 'app-simple-song-card',\n  templateUrl: './simple-song-card.component.html',\n  styleUrls: ['./simple-song-card.component.css']\n})\nexport class SimpleSongCardComponent implements OnInit {\n\n  @Input() song;\n  @Input() playlists;\n  \n  constructor(\n    private playlistService: PlaylistService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  addToPlaylist(playlistId, songUri){\n    this.playlistService.addSongToPlaylist(playlistId, songUri).subscribe(data => {\n      console.log(data)\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/simple-song-card/simple-song-card.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".example-card {\\n    max-width: 250px;\\n    margin: 10px\\n  }\\n  \\n  .example-header-image {\\n    background-image: url('https://material.angular.io/assets/img/examples/shiba1.jpg');\\n    background-size: cover;\\n  }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/song-card/song-card.component.css\n// module id = ../../../../../src/app/components/song-card/song-card.component.css\n// module chunks = main","module.exports = \"<!-- <div class=\\\"wrapper\\\">\\n  <div class=\\\"info\\\">\\n    <img class=\\\"img\\\" src=\\\"{{song.album.images[0].url}}\\\">\\n  </div>\\n  <div class=\\\"info\\\">\\n    <h3>{{song.name}}</h3>\\n    <a routerLink=\\\"/albums/{{song.album.id}}\\\"><p>Album: {{song.album.name}}</p></a>\\n    <p>Artists: <span *ngFor=\\\"let artist of song.artists\\\">{{artist.name}}, </span></p>\\n  </div>\\n</div> -->\\n<mat-card class=\\\"info\\\" class=\\\"example-card\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\n      <mat-card-title>{{song.name}}</mat-card-title>\\n       <mat-card-subtitle><a routerLink=\\\"/albums/{{song.album.id}}\\\">Album: {{song.album.name}}</a></mat-card-subtitle>\\n    </mat-card-header>\\n    <img mat-card-image src=\\\"{{song.album.images[0].url}}\\\" alt=\\\"No image\\\">\\n    <mat-card-content>\\n        <p>Artists: <span *ngFor=\\\"let artist of song.artists\\\">{{artist.name}}, </span></p>\\n      <app-preview *ngIf=\\\"song.preview_url\\\" [previewUrl]=\\\"song.preview_url\\\"></app-preview>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-button [matMenuTriggerFor]=\\\"menu\\\">ADD TO PLAYLIST</button>\\n      <mat-menu #menu=\\\"matMenu\\\">\\n        <button *ngFor=\\\"let playlist of playlists\\\" (click)=\\\"addToPlaylist(playlist.id, song.uri)\\\" mat-menu-item>{{playlist.name}}</button>\\n      </mat-menu>\\n    </mat-card-actions>\\n  </mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/song-card/song-card.component.html\n// module id = ../../../../../src/app/components/song-card/song-card.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { PlaylistService } from '../../services/playlist.service';\nimport { HttpClient } from '@angular/common/http/src/client';\n\n@Component({\n  selector: 'app-song-card',\n  templateUrl: './song-card.component.html',\n  styleUrls: ['./song-card.component.css']\n})\nexport class SongCardComponent implements OnInit {\n\n\n  @Input() song;\n  @Input() playlists;\n\n  constructor(\n    private playlistService: PlaylistService,\n  ) { }\n\n  ngOnInit() {\n\n  }\n\n\n\n  addToPlaylist(playlistId, songUri){\n    this.playlistService.addSongToPlaylist(playlistId, songUri).subscribe(data => {\n      console.log(data)\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/components/song-card/song-card.component.ts","import { Injectable } from \"@angular/core\"\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\"\n\n\n@Injectable()\n\nexport class IsLoggedGuard implements CanActivate {\n  private isLoggedIn: boolean = false\n\n  constructor(private router: Router){\n\n  }\n\n  public canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.checkIsLoggedIn(state.url)\n  }\n\n  private checkIsLoggedIn(url: string): boolean {\n    if (!sessionStorage.getItem('access_token') || sessionStorage.getItem('access_token') === 'null') {\n    this.router.navigateByUrl('login')       \n      return false\n    }\n\n    return true\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/guards/isLogged.guard.ts","import { Injectable } from '@angular/core';\n\nimport {\n    HttpErrorResponse,\n    HttpEvent,\n    HttpHandler,\n    HttpInterceptor,\n    HttpRequest,\n    HttpResponse\n} from '@angular/common/http';\n\nimport { Router } from '@angular/router';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/switchMap';\nimport 'rxjs/add/operator/finally';\n\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\n@Injectable()\nexport class ExpiredTokenInterceptor implements HttpInterceptor {\n    \n    public isRefreshing = false;\n    public token: BehaviorSubject<string> = new BehaviorSubject<string>(null);\n    \n    constructor(private router: Router,\n        private http: HttpClient) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(this.addToken(req, sessionStorage.getItem('access_token')))\n            .catch(error => {\n                if(error instanceof HttpErrorResponse) {\n                    return this.handle401(req, next);\n                } else {\n                    return Observable.throw(error);\n                }\n            })\n        \n    }\n\n    public addToken(req: HttpRequest<any>, token) {\n        return req.clone({setHeaders: {Authorization: 'Bearer ' + token}});\n    }\n\n    public handle401(req, next: HttpHandler) {\n        if(!this.isRefreshing) {\n            this.isRefreshing = true;\n            this.token.next(null);\n\n           return this.http.get(`/refresh_token?refresh_token=${sessionStorage.getItem('refresh_token')}`)\n                .switchMap((data: any) => {\n                    console.log('got new token', data);\n                    sessionStorage.setItem('access_token', data.access_token);\n                    return next.handle(this.addToken(req, data.access_token))\n                })\n                .finally(()=> {\n                    this.isRefreshing = false;\n                })\n        } \n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/interceptors/expired-token.interceptor.ts","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs/Subject\";\n\n\n@Injectable()\nexport class AuthService {\n    private authSource = new BehaviorSubject<any>({});\n    public authRecieved$ = this.authSource.asObservable();\n\n    public user = new BehaviorSubject<any>({});\n    public hasUser = false;\n    public accessToken = '';\n    public userId = \"\";\n    constructor(\n        private http: HttpClient\n    ){\n        this.authRecieved$.subscribe(\n            data => {\n                this.accessToken = data.access_token;\n            }\n        )\n    };\n\n    getAccessToken() {\n        if(this.accessToken) {\n            return this.accessToken;\n        }\n        if(this.userId){\n            return this.userId\n        }\n\n        this.accessToken = sessionStorage.getItem('access_token');\n        this.getUserInfo();\n        return sessionStorage.getItem('access_token');\n    }\n\n\n    updateAuth(data){\n        this.authSource.next(data);\n        this.getUserInfo()\n    }\n\n    getUserInfo() {\n        let options = {\n            url: 'https://api.spotify.com/v1/me',\n            headers: { 'Authorization': 'Bearer ' + this.getAccessToken() },\n            json: true\n          };\n\n        this.http.get(options.url, {headers: options.headers})\n          .subscribe(data => {\n              this.userId = data['id'];\n              this.user.next(data)});\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/services/auth.service.ts","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subject } from \"rxjs/Subject\";\nimport { AuthService } from \"./auth.service\";\n\n\n@Injectable()\nexport class PlaylistService {\n\n    private token;\n    private user;\n\n    constructor(\n        private http: HttpClient,\n        private authService: AuthService\n    ) {\n        this.token = this.authService.getAccessToken();\n        this.authService.user\n            .subscribe(user => {\n                this.user = user\n                console.log(this.user)\n            });\n    };\n\n\n    createPlaylist(userId, body) {\n        return this.http.post(`https://api.spotify.com/v1/users/${userId}/playlists`, {\n            \"description\": body.description,\n            \"public\": false,\n            \"name\": body.name\n        })\n    }\n\n    getMyPlaylists() {\n        return this.http.get(`https://api.spotify.com/v1/me/playlists`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + this.token\n            }\n        })\n    }\n\n    addSongToPlaylist(playlistId, songUri) {\n        return this.http.post(`https://api.spotify.com/v1/users/${this.user.id}/playlists/${playlistId}/tracks?uris=${songUri}`, {}, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + this.token\n            }\n        })\n    }\n\n    getTracks(playlistId) {\n        return this.http.get(`https://api.spotify.com/v1/users/${this.user.id}/playlists/${playlistId}/tracks`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + this.token\n            }\n        })\n    }\n\n    removeTrack(playlistId, trackUi, index) {\n        console.log(index)\n        const data = {\n            tracks: [\n                {\n                    uri: trackUi,\n                    positions: [index]\n                }\n            ]\n        }\n\n        return this.http.request('delete',\n            `https://api.spotify.com/v1/users/${this.user.id}/playlists/${playlistId}/tracks`,\n            {   \n                body: data,\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': 'Bearer ' + this.token\n                },\n\n            })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/app/services/playlist.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/stoyanzhulev/Desktop/spotify-app/frontend/spotify-frontend/src/main.ts"],"sourceRoot":"webpack:///"}